
coding7segment_ea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002b8  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000040  00000000  00000000  000002e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000c06  00000000  00000000  00000327  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000852  00000000  00000000  00000f2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000002f6  00000000  00000000  0000177f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000f4  00000000  00000000  00001a78  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  00001b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000022b  00000000  00000000  00001de9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000030  00000000  00000000  00002014  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000240  00000240  000002b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002044  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.display 00000018  0000021a  0000021a  0000028e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__vector_2 00000080  000000fa  000000fa  0000016e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_3 00000080  0000017a  0000017a  000001ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    00000020  000001fa  000001fa  0000026e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .bss.index    00000002  00800100  00800100  000002b8  2**0
                  ALLOC
 18 .progmemx.data.Numbers 00000010  000000ea  000000ea  0000015e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 19 .text.libgcc  0000000e  00000232  00000232  000002a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
   4:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__vector_2>
   c:	0c 94 bd 00 	jmp	0x17a	; 0x17a <__vector_3>
  10:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  14:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  18:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  1c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  20:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  24:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  28:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  2c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  30:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  34:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  38:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  3c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  40:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  44:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  48:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  4c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  50:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  54:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  58:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  5c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  60:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  64:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  68:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  6c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  70:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  74:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  78:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  7c:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  80:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  84:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>
  88:	0c 94 20 01 	jmp	0x240	; 0x240 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 02       	muls	r16, r17
  90:	80 00       	.word	0x0080	; ????

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf ef       	ldi	r28, 0xFF	; 255
  98:	d0 e1       	ldi	r29, 0x10	; 16
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	19 c0       	rjmp	.+50     	; 0xd8 <__do_clear_bss+0x8>
  a6:	b7 91       	elpm	r27, Z+
  a8:	a7 91       	elpm	r26, Z+
  aa:	37 91       	elpm	r19, Z+
  ac:	27 91       	elpm	r18, Z+
  ae:	07 91       	elpm	r16, Z+
  b0:	07 fd       	sbrc	r16, 7
  b2:	0e c0       	rjmp	.+28     	; 0xd0 <__do_clear_bss>
  b4:	97 91       	elpm	r25, Z+
  b6:	87 91       	elpm	r24, Z+
  b8:	ef 01       	movw	r28, r30
  ba:	f9 2f       	mov	r31, r25
  bc:	e8 2f       	mov	r30, r24
  be:	0b bf       	out	0x3b, r16	; 59
  c0:	07 90       	elpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a2 17       	cp	r26, r18
  c6:	b3 07       	cpc	r27, r19
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x22>
  ca:	fe 01       	movw	r30, r28
  cc:	1b be       	out	0x3b, r1	; 59
  ce:	04 c0       	rjmp	.+8      	; 0xd8 <__do_clear_bss+0x8>

000000d0 <__do_clear_bss>:
  d0:	1d 92       	st	X+, r1
  d2:	a2 17       	cp	r26, r18
  d4:	b3 07       	cpc	r27, r19
  d6:	e1 f7       	brne	.-8      	; 0xd0 <__do_clear_bss>
  d8:	e1 39       	cpi	r30, 0x91	; 145
  da:	f4 07       	cpc	r31, r20
  dc:	21 f7       	brne	.-56     	; 0xa6 <__do_copy_data+0x8>
  de:	0e 94 fd 00 	call	0x1fa	; 0x1fa <main>
  e2:	0c 94 73 00 	jmp	0xe6	; 0xe6 <_exit>

000000e6 <_exit>:
  e6:	f8 94       	cli

000000e8 <__stop_program>:
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <__stop_program>

Disassembly of section .text:

00000240 <__bad_interrupt>:
 240:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.display:

0000021a <display>:
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}

void display(int digit){
	PORTB = Numbers[digit];
 21a:	09 2e       	mov	r0, r25
 21c:	00 0c       	add	r0, r0
 21e:	aa 0b       	sbc	r26, r26
 220:	86 51       	subi	r24, 0x16	; 22
 222:	9f 4f       	sbci	r25, 0xFF	; 255
 224:	af 4f       	sbci	r26, 0xFF	; 255
 226:	fc 01       	movw	r30, r24
 228:	5a 2f       	mov	r21, r26
 22a:	0e 94 19 01 	call	0x232	; 0x232 <__xload_1>
 22e:	68 bb       	out	0x18, r22	; 24
 230:	08 95       	ret

Disassembly of section .text.__vector_2:

000000fa <__vector_2>:

void wait( int ms ) {
	for (int i=0; i<ms; i++) {
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
  fa:	1f 92       	push	r1
  fc:	0f 92       	push	r0
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	0b b6       	in	r0, 0x3b	; 59
 106:	0f 92       	push	r0
 108:	2f 93       	push	r18
 10a:	3f 93       	push	r19
 10c:	4f 93       	push	r20
 10e:	5f 93       	push	r21
 110:	6f 93       	push	r22
 112:	7f 93       	push	r23
 114:	8f 93       	push	r24
 116:	9f 93       	push	r25
 118:	af 93       	push	r26
 11a:	bf 93       	push	r27
 11c:	ef 93       	push	r30
 11e:	ff 93       	push	r31
 120:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 124:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 128:	18 16       	cp	r1, r24
 12a:	19 06       	cpc	r1, r25
 12c:	2c f4       	brge	.+10     	; 0x138 <__vector_2+0x3e>
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 134:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 138:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 13c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 140:	8f 70       	andi	r24, 0x0F	; 15
 142:	90 78       	andi	r25, 0x80	; 128
 144:	99 23       	and	r25, r25
 146:	24 f4       	brge	.+8      	; 0x150 <__vector_2+0x56>
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	80 6f       	ori	r24, 0xF0	; 240
 14c:	9f 6f       	ori	r25, 0xFF	; 255
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	0e 94 0d 01 	call	0x21a	; 0x21a <display>
 154:	ff 91       	pop	r31
 156:	ef 91       	pop	r30
 158:	bf 91       	pop	r27
 15a:	af 91       	pop	r26
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	7f 91       	pop	r23
 162:	6f 91       	pop	r22
 164:	5f 91       	pop	r21
 166:	4f 91       	pop	r20
 168:	3f 91       	pop	r19
 16a:	2f 91       	pop	r18
 16c:	0f 90       	pop	r0
 16e:	0b be       	out	0x3b, r0	; 59
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

Disassembly of section .text.__vector_3:

0000017a <__vector_3>:
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	0b b6       	in	r0, 0x3b	; 59
 186:	0f 92       	push	r0
 188:	2f 93       	push	r18
 18a:	3f 93       	push	r19
 18c:	4f 93       	push	r20
 18e:	5f 93       	push	r21
 190:	6f 93       	push	r22
 192:	7f 93       	push	r23
 194:	8f 93       	push	r24
 196:	9f 93       	push	r25
 198:	af 93       	push	r26
 19a:	bf 93       	push	r27
 19c:	ef 93       	push	r30
 19e:	ff 93       	push	r31
 1a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1a4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1a8:	8f 30       	cpi	r24, 0x0F	; 15
 1aa:	91 05       	cpc	r25, r1
 1ac:	2c f4       	brge	.+10     	; 0x1b8 <__vector_3+0x3e>
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1b8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1bc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1c0:	8f 70       	andi	r24, 0x0F	; 15
 1c2:	90 78       	andi	r25, 0x80	; 128
 1c4:	99 23       	and	r25, r25
 1c6:	24 f4       	brge	.+8      	; 0x1d0 <__vector_3+0x56>
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	80 6f       	ori	r24, 0xF0	; 240
 1cc:	9f 6f       	ori	r25, 0xFF	; 255
 1ce:	01 96       	adiw	r24, 0x01	; 1
 1d0:	0e 94 0d 01 	call	0x21a	; 0x21a <display>
 1d4:	ff 91       	pop	r31
 1d6:	ef 91       	pop	r30
 1d8:	bf 91       	pop	r27
 1da:	af 91       	pop	r26
 1dc:	9f 91       	pop	r25
 1de:	8f 91       	pop	r24
 1e0:	7f 91       	pop	r23
 1e2:	6f 91       	pop	r22
 1e4:	5f 91       	pop	r21
 1e6:	4f 91       	pop	r20
 1e8:	3f 91       	pop	r19
 1ea:	2f 91       	pop	r18
 1ec:	0f 90       	pop	r0
 1ee:	0b be       	out	0x3b, r0	; 59
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

Disassembly of section .text.main:

000001fa <main>:
 1fa:	8f ef       	ldi	r24, 0xFF	; 255
 1fc:	82 bb       	out	0x12, r24	; 18
 1fe:	90 ef       	ldi	r25, 0xF0	; 240
 200:	91 bb       	out	0x11, r25	; 17
 202:	87 bb       	out	0x17, r24	; 23
 204:	ea e6       	ldi	r30, 0x6A	; 106
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	80 81       	ld	r24, Z
 20a:	8c 63       	ori	r24, 0x3C	; 60
 20c:	80 83       	st	Z, r24
 20e:	89 b7       	in	r24, 0x39	; 57
 210:	86 60       	ori	r24, 0x06	; 6
 212:	89 bf       	out	0x39, r24	; 57
 214:	78 94       	sei
 216:	12 ba       	out	0x12, r1	; 18
 218:	ff cf       	rjmp	.-2      	; 0x218 <main+0x1e>

Disassembly of section .text.libgcc:

00000232 <__xload_1>:
 232:	57 fd       	sbrc	r21, 7
 234:	03 c0       	rjmp	.+6      	; 0x23c <__xload_1+0xa>
 236:	5b bf       	out	0x3b, r21	; 59
 238:	67 91       	elpm	r22, Z+
 23a:	08 95       	ret
 23c:	60 81       	ld	r22, Z
 23e:	08 95       	ret
