
coding7segment_ea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002d0  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000048  00000000  00000000  000002ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000c39  00000000  00000000  00000347  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000868  00000000  00000000  00000f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000031f  00000000  00000000  000017e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000104  00000000  00000000  00001b08  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  00001c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000022b  00000000  00000000  00001e89  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000038  00000000  00000000  000020b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000258  00000258  000002cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000020ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.display 00000018  00000222  00000222  00000296  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.checkResetValue 00000010  0000023a  0000023a  000002ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_2 00000084  000000fa  000000fa  0000016e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__vector_3 00000084  0000017e  0000017e  000001f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    00000020  00000202  00000202  00000276  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .bss.index    00000002  00800100  00800100  000002d0  2**0
                  ALLOC
 19 .progmemx.data.Numbers 00000010  000000ea  000000ea  0000015e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.libgcc  0000000e  0000024a  0000024a  000002be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
   4:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
   8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__vector_2>
   c:	0c 94 bf 00 	jmp	0x17e	; 0x17e <__vector_3>
  10:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  14:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  18:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  1c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  20:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  24:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  28:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  2c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  30:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  34:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  38:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  3c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  40:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  44:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  48:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  4c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  50:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  54:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  58:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  5c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  60:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  64:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  68:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  6c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  70:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  74:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  78:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  7c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  80:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  84:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>
  88:	0c 94 2c 01 	jmp	0x258	; 0x258 <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 02       	muls	r16, r17
  90:	80 00       	.word	0x0080	; ????

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf ef       	ldi	r28, 0xFF	; 255
  98:	d0 e1       	ldi	r29, 0x10	; 16
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	19 c0       	rjmp	.+50     	; 0xd8 <__do_clear_bss+0x8>
  a6:	b7 91       	elpm	r27, Z+
  a8:	a7 91       	elpm	r26, Z+
  aa:	37 91       	elpm	r19, Z+
  ac:	27 91       	elpm	r18, Z+
  ae:	07 91       	elpm	r16, Z+
  b0:	07 fd       	sbrc	r16, 7
  b2:	0e c0       	rjmp	.+28     	; 0xd0 <__do_clear_bss>
  b4:	97 91       	elpm	r25, Z+
  b6:	87 91       	elpm	r24, Z+
  b8:	ef 01       	movw	r28, r30
  ba:	f9 2f       	mov	r31, r25
  bc:	e8 2f       	mov	r30, r24
  be:	0b bf       	out	0x3b, r16	; 59
  c0:	07 90       	elpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a2 17       	cp	r26, r18
  c6:	b3 07       	cpc	r27, r19
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0x22>
  ca:	fe 01       	movw	r30, r28
  cc:	1b be       	out	0x3b, r1	; 59
  ce:	04 c0       	rjmp	.+8      	; 0xd8 <__do_clear_bss+0x8>

000000d0 <__do_clear_bss>:
  d0:	1d 92       	st	X+, r1
  d2:	a2 17       	cp	r26, r18
  d4:	b3 07       	cpc	r27, r19
  d6:	e1 f7       	brne	.-8      	; 0xd0 <__do_clear_bss>
  d8:	e1 39       	cpi	r30, 0x91	; 145
  da:	f4 07       	cpc	r31, r20
  dc:	21 f7       	brne	.-56     	; 0xa6 <__do_copy_data+0x8>
  de:	0e 94 01 01 	call	0x202	; 0x202 <main>
  e2:	0c 94 73 00 	jmp	0xe6	; 0xe6 <_exit>

000000e6 <_exit>:
  e6:	f8 94       	cli

000000e8 <__stop_program>:
  e8:	ff cf       	rjmp	.-2      	; 0xe8 <__stop_program>

Disassembly of section .text:

00000258 <__bad_interrupt>:
 258:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.display:

00000222 <display>:
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}

void display(int digit){
	PORTB = Numbers[digit];
 222:	09 2e       	mov	r0, r25
 224:	00 0c       	add	r0, r0
 226:	aa 0b       	sbc	r26, r26
 228:	86 51       	subi	r24, 0x16	; 22
 22a:	9f 4f       	sbci	r25, 0xFF	; 255
 22c:	af 4f       	sbci	r26, 0xFF	; 255
 22e:	fc 01       	movw	r30, r24
 230:	5a 2f       	mov	r21, r26
 232:	0e 94 25 01 	call	0x24a	; 0x24a <__xload_1>
 236:	68 bb       	out	0x18, r22	; 24
 238:	08 95       	ret

Disassembly of section .text.checkResetValue:

0000023a <checkResetValue>:
}

void checkResetValue() {
	if ( PIND == 0b00000110 ) {
 23a:	80 b3       	in	r24, 0x10	; 16
 23c:	86 30       	cpi	r24, 0x06	; 6
 23e:	21 f4       	brne	.+8      	; 0x248 <checkResetValue+0xe>
		index = 0;
 240:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 244:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 248:	08 95       	ret

Disassembly of section .text.__vector_2:

000000fa <__vector_2>:

void wait( int ms ) {
	for (int i=0; i<ms; i++) {
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
  fa:	1f 92       	push	r1
  fc:	0f 92       	push	r0
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	0b b6       	in	r0, 0x3b	; 59
 106:	0f 92       	push	r0
 108:	2f 93       	push	r18
 10a:	3f 93       	push	r19
 10c:	4f 93       	push	r20
 10e:	5f 93       	push	r21
 110:	6f 93       	push	r22
 112:	7f 93       	push	r23
 114:	8f 93       	push	r24
 116:	9f 93       	push	r25
 118:	af 93       	push	r26
 11a:	bf 93       	push	r27
 11c:	ef 93       	push	r30
 11e:	ff 93       	push	r31
 120:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 124:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 128:	18 16       	cp	r1, r24
 12a:	19 06       	cpc	r1, r25
 12c:	2c f4       	brge	.+10     	; 0x138 <__vector_2+0x3e>
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 134:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 138:	0e 94 1d 01 	call	0x23a	; 0x23a <checkResetValue>
 13c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 140:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 144:	8f 70       	andi	r24, 0x0F	; 15
 146:	90 78       	andi	r25, 0x80	; 128
 148:	99 23       	and	r25, r25
 14a:	24 f4       	brge	.+8      	; 0x154 <__vector_2+0x5a>
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	80 6f       	ori	r24, 0xF0	; 240
 150:	9f 6f       	ori	r25, 0xFF	; 255
 152:	01 96       	adiw	r24, 0x01	; 1
 154:	0e 94 11 01 	call	0x222	; 0x222 <display>
 158:	ff 91       	pop	r31
 15a:	ef 91       	pop	r30
 15c:	bf 91       	pop	r27
 15e:	af 91       	pop	r26
 160:	9f 91       	pop	r25
 162:	8f 91       	pop	r24
 164:	7f 91       	pop	r23
 166:	6f 91       	pop	r22
 168:	5f 91       	pop	r21
 16a:	4f 91       	pop	r20
 16c:	3f 91       	pop	r19
 16e:	2f 91       	pop	r18
 170:	0f 90       	pop	r0
 172:	0b be       	out	0x3b, r0	; 59
 174:	0f 90       	pop	r0
 176:	0f be       	out	0x3f, r0	; 63
 178:	0f 90       	pop	r0
 17a:	1f 90       	pop	r1
 17c:	18 95       	reti

Disassembly of section .text.__vector_3:

0000017e <__vector_3>:
 17e:	1f 92       	push	r1
 180:	0f 92       	push	r0
 182:	0f b6       	in	r0, 0x3f	; 63
 184:	0f 92       	push	r0
 186:	11 24       	eor	r1, r1
 188:	0b b6       	in	r0, 0x3b	; 59
 18a:	0f 92       	push	r0
 18c:	2f 93       	push	r18
 18e:	3f 93       	push	r19
 190:	4f 93       	push	r20
 192:	5f 93       	push	r21
 194:	6f 93       	push	r22
 196:	7f 93       	push	r23
 198:	8f 93       	push	r24
 19a:	9f 93       	push	r25
 19c:	af 93       	push	r26
 19e:	bf 93       	push	r27
 1a0:	ef 93       	push	r30
 1a2:	ff 93       	push	r31
 1a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1a8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1ac:	8f 30       	cpi	r24, 0x0F	; 15
 1ae:	91 05       	cpc	r25, r1
 1b0:	2c f4       	brge	.+10     	; 0x1bc <__vector_3+0x3e>
 1b2:	01 96       	adiw	r24, 0x01	; 1
 1b4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1b8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1bc:	0e 94 1d 01 	call	0x23a	; 0x23a <checkResetValue>
 1c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1c8:	8f 70       	andi	r24, 0x0F	; 15
 1ca:	90 78       	andi	r25, 0x80	; 128
 1cc:	99 23       	and	r25, r25
 1ce:	24 f4       	brge	.+8      	; 0x1d8 <__vector_3+0x5a>
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	80 6f       	ori	r24, 0xF0	; 240
 1d4:	9f 6f       	ori	r25, 0xFF	; 255
 1d6:	01 96       	adiw	r24, 0x01	; 1
 1d8:	0e 94 11 01 	call	0x222	; 0x222 <display>
 1dc:	ff 91       	pop	r31
 1de:	ef 91       	pop	r30
 1e0:	bf 91       	pop	r27
 1e2:	af 91       	pop	r26
 1e4:	9f 91       	pop	r25
 1e6:	8f 91       	pop	r24
 1e8:	7f 91       	pop	r23
 1ea:	6f 91       	pop	r22
 1ec:	5f 91       	pop	r21
 1ee:	4f 91       	pop	r20
 1f0:	3f 91       	pop	r19
 1f2:	2f 91       	pop	r18
 1f4:	0f 90       	pop	r0
 1f6:	0b be       	out	0x3b, r0	; 59
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

Disassembly of section .text.main:

00000202 <main>:
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	82 bb       	out	0x12, r24	; 18
 206:	90 ef       	ldi	r25, 0xF0	; 240
 208:	91 bb       	out	0x11, r25	; 17
 20a:	87 bb       	out	0x17, r24	; 23
 20c:	ea e6       	ldi	r30, 0x6A	; 106
 20e:	f0 e0       	ldi	r31, 0x00	; 0
 210:	80 81       	ld	r24, Z
 212:	8c 63       	ori	r24, 0x3C	; 60
 214:	80 83       	st	Z, r24
 216:	89 b7       	in	r24, 0x39	; 57
 218:	86 60       	ori	r24, 0x06	; 6
 21a:	89 bf       	out	0x39, r24	; 57
 21c:	78 94       	sei
 21e:	12 ba       	out	0x12, r1	; 18
 220:	ff cf       	rjmp	.-2      	; 0x220 <main+0x1e>

Disassembly of section .text.libgcc:

0000024a <__xload_1>:
 24a:	57 fd       	sbrc	r21, 7
 24c:	03 c0       	rjmp	.+6      	; 0x254 <__xload_1+0xa>
 24e:	5b bf       	out	0x3b, r21	; 59
 250:	67 91       	elpm	r22, Z+
 252:	08 95       	ret
 254:	60 81       	ld	r22, Z
 256:	08 95       	ret
